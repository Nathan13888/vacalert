@import "~@angular/material/theming";
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();

$md-vapalette: (
  600: #dc143c,
  700: #a44d04,
  800: #9c4303,
  900: #8c3202,
  A100: #ffccb8,
  A200: #ffa785,
  A400: #ff8252,
  A700: #ff7039,
  contrast: (
    600: #ffffff,
    700: #ffffff,
    800: #ffffff,
    900: #ffffff,
    A100: #000000,
    A200: #000000,
    A400: #000000,
    A700: #000000,
  ),
);

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue.
$candy-app-primary: mat-palette($md-vapalette, 600);
$candy-app-accent: mat-palette($mat-lime);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-deep-orange);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme(
  $candy-app-primary,
  $candy-app-accent,
  $candy-app-warn
);

// @mixin mix-candy-app-theme($candy-app-theme) {
//   $primary: map-get($candy-app-theme, primary);

//   .mat-button-toggle-checked {
//     background-color: mat-color($primary);
//     font-weight: bold;

//     .mat-button-toggle-label-content {
//       color: $light-primary-text;
//     }
//   }
// }

// Include the mixin
// @include mix-candy-app-theme($candy-app-theme);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
